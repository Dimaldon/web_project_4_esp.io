!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(t,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}var n=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.overlayElement=t}var n,r;return n=e,(r=[{key:"handleOverlay",value:function(){this.overlayElement.classList.toggle("overlay__visible")}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this._identificaOverlayAbierto()&&this.handleOverlay()}},{key:"_identificaOverlayAbierto",value:function(){return this.overlayElement.className.indexOf("overlay__visible")>-1}},{key:"setEventListeners",value:function(){var e=this;this.overlayElement.addEventListener("click",(function(t){t.target!==e.overlayElement&&-1==t.target.className.indexOf("overlay__form-close-button")||e._identificaOverlayAbierto()&&e.handleOverlay()}))}}])&&t(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),e}();function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function o(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==r(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===r(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=l(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},i.apply(this,arguments)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function l(e){return l=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},l(e)}var u=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(f,e);var t,n,u,c,s=(u=f,c=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=l(u);if(c){var n=l(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===r(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function f(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,f),s.call(this,e)}return t=f,(n=[{key:"handleOverlay",value:function(e,t){this.imagePreview=document.querySelector(".overlay__preview-image"),this.imagePreview.src=e,this.imagePreview.alt=t,this.imageCaption=document.querySelector(".overlay__preview-caption"),this.imageCaption.textContent=t,i(l(f.prototype),"handleOverlay",this).call(this)}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),f}(n);function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==c(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==c(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===c(o)?o:String(o)),r)}var o}var f=function(){function e(t,n,r,o,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.cardData=t,this.link=t.link,this.name=t.name,this.likes=t.likes,this.myCard=n,this.handleDeleteClick=r,this.handleLikeAdd=o,this.handleLikeDelete=i}var t,n;return t=e,(n=[{key:"handleRemoveLike",value:function(){this.btnLike.classList.remove("content__elements__button-like-active")}},{key:"handleAddLike",value:function(){this.btnLike.classList.add("content__elements__button-like-active")}},{key:"_deleteCard",value:function(){this.element.remove()}},{key:"_setEvents",value:function(){var e=this;this.btnLike.addEventListener("click",(function(){e.btnLike.className.indexOf("content__elements__button-like-active")>-1?e.handleLikeDelete(e.cardData._id):e.handleLikeAdd(e.cardData._id)})),this.btnDelete.addEventListener("click",(function(){e.handleDeleteClick(e.cardData._id)})),this.cardImage.onclick=function(){var t=document.querySelector("#overlayCardPreview");new u(t).handleOverlay(e.link,e.name)}}},{key:"setCardLikes",value:function(){this.cardLikes.textContent=this.likes.length}},{key:"generateCard",value:function(){var e=document.querySelector(".card__template");return this.cardItem=e.content.cloneNode(!0),this.element=this.cardItem.querySelector(".elements"),this.cardImage=this.element.querySelector(".content__elements-image"),this.cardTitle=this.element.querySelector(".content__elements-title"),this.cardLikes=this.element.querySelector(".content__elements__numbers-like"),this.btnLike=this.element.querySelector(".content__elements__button-like"),this.btnDelete=this.cardItem.querySelector(".content__elements__delete-button"),this.myCard||this.btnDelete.remove(),this.cardImage.src=this.link,this.cardTitle.textContent=this.name,this.setCardLikes(),this._setEvents(),this.element}}])&&s(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,v(r.key),r)}}function d(e,t,n){return(t=v(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function v(e){var t=function(e,t){if("object"!==m(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==m(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===m(t)?t:String(t)}var b=function(){function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),d(this,"_showInputError",(function(e,t){r.errorElement=r.eValidateForm.querySelector(".".concat(e.id,"-error")),e.classList.add("form__input_type_error"),r.errorElement.textContent=t,r.errorElement.classList.add("form__input-error_active")})),d(this,"_hideInputError",(function(e){r.errorElement=r.eValidateForm.querySelector(".".concat(e.id,"-error")),e.classList.remove("form__input_type_error"),r.errorElement.classList.remove("form__input-error_active"),r.errorElement.textContent=""})),d(this,"_checkInputValidity",(function(e){e.validity.valid?r._hideInputError(e):r._showInputError(e,e.validationMessage)})),d(this,"_hasInvalidInput",(function(){return r.inputList.some((function(e){return!e.validity.valid}))})),d(this,"_toggleButtonState",(function(){r._hasInvalidInput()?(r.buttonElement.classList.add("overlay__form-button-disabled"),r.buttonElement.disabled=!0):(r.buttonElement.classList.remove("overlay__form-button-disabled"),r.buttonElement.disabled=!1)})),d(this,"_setEventListeners",(function(){var e=r;r.inputList=Array.from(r.eValidateForm.querySelectorAll(r.oValidateInputs.input)),r.buttonElement=r.eValidateForm.querySelector(r.oValidateInputs.button),r._toggleButtonState(),r.inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))})),this.oValidateInputs=t,this.eValidateForm=n}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){this.eValidateForm.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&y(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function h(e){document.querySelector(e).classList.toggle("overlay__visible")}function p(){return document.getElementsByClassName("overlay__visible").length>0?document.getElementsByClassName("overlay__visible")[0].id:null}function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==_(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==_(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===_(o)?o:String(o)),r)}var o}document.querySelector(".content__profile-button-edit").addEventListener("click",(function(){h("#overlay__profile-edit")})),document.querySelector(".content__profile-button-add").addEventListener("click",(function(){h("#overlay__card-add")})),document.querySelectorAll(".overlay").forEach((function(e){e.addEventListener("click",(function(t){t.target!==e&&-1==t.target.className.indexOf("overlay__form-close-button")||null!=p()&&h("#"+p())}))})),document.addEventListener("keydown",(function(e){"Escape"===e.key&&null!=p()&&h("#"+p())}));var E=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseURL=t.baseUrl,this._headers=t.headers}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(){return fetch(this._baseURL+"/cards",{headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"getInitialUserMe",value:function(){return fetch(this._baseURL+"/users/me",{headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"patchInitialUserMe",value:function(e,t){return fetch(this._baseURL+"/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"postNewCard",value:function(e,t){return fetch(this._baseURL+"/cards",{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"deleteCard",value:function(e){return fetch(this._baseURL+"/cards/"+e,{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"putLikeButtonCard",value:function(e){return fetch(this._baseURL+"/cards/likes/"+e,{method:"PUT",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"deleteLikeButtonCard",value:function(e){return fetch(this._baseURL+"/cards/likes/"+e,{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"updateUserMeAvatar",value:function(e){return fetch(this._baseURL+"/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}}])&&g(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==S(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==S(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===S(o)?o:String(o)),r)}var o}var j=function(){function e(t){var n=t.nameElement,r=t.jobElement,o=t.imagenElement,i=t.name,a=t.job,l=t.imagen;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.nameElement=n,this.jobElement=r,this.imagenElement=o,this.name=i,this.job=a,this.imagen=l}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this.name,job:this.job,imagen:this.imagen}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.job,r=e.imagen;this.name=t,this.job=n,this.imagen=r,this.nameElement.textContent=this.name,this.jobElement.textContent=this.job,this.imagenElement.src=this.imagen}}])&&k(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function w(e){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},w(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==w(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==w(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===w(o)?o:String(o)),r)}var o}function L(){return L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},L.apply(this,arguments)}function P(e,t){return P=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},P(e,t)}function C(e){return C=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},C(e)}var I,U=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&P(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(r);if(o){var n=C(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===w(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._handleImageFormDelete,t}return t=a,(n=[{key:"setHandleImageFormDelete",value:function(e){this._handleImageFormDelete=e}},{key:"setEventListeners",value:function(){var e=this;L(C(a.prototype),"setEventListeners",this).call(this),document.querySelector("#FormCardDelete").addEventListener("submit",(function(){e._handleImageFormDelete()}))}}])&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(n),q=document.querySelector("#overlay__form-name"),D=document.querySelector("#overlay__form-job"),R=document.querySelector(".content__profile-title"),T=document.querySelector(".content__profile-description"),A=document.querySelector("#overlay__form-place"),x=document.querySelector("#overlay__form-imageURL"),F=document.querySelector("#overlay__form-avatar-update"),B=document.querySelector(".content__elements-grid"),V=document.querySelector(".content__profile-image"),N=new E({baseUrl:"https://around.nomoreparties.co/v1/web_es_cohort_03",headers:{authorization:"361c2497-73b4-4dd1-9a02-2225ff5963b5","Content-Type":"application/json"}});N.getInitialUserMe().then((function(e){var t=e.name,n=e.about,r=e.avatar;I=e._id;var o=new j({nameElement:R,jobElement:T,imagenElement:V,name:t,job:n,imagen:r});o.setUserInfo(o.getUserInfo()),function(){var e=document.querySelector(".content__elements-grid");N.getInitialCards().then((function(t){t.forEach((function(t){H({cardData:t,eContainer:e,idUser:I})}))})),Array.from(document.querySelectorAll(".overlay__form")).forEach((function(e){new b({input:".overlay__text-input",button:".overlay__form-submit-button"},e).enableValidation()}))}()})),V.addEventListener("click",(function(){new n(document.querySelector("#overlayAvatarUpdate"),(function(){N.updateUserMeAvatar(F.value).then((function(e){var t=e.name,n=e.about,r=e.avatar,o=new j({nameElement:R,jobElement:T,imagenElement:V,name:t,job:n,imagen:r});o.setUserInfo(o.getUserInfo()),h("#overlayAvatarUpdate")}))})).handleOverlay()})),document.querySelector("#profileForm").addEventListener("submit",(function(e){e.preventDefault(),N.patchInitialUserMe(q.value,D.value).then((function(e){var t=e.name,n=e.about,r=e.avatar,o=new j({nameElement:R,jobElement:T,imagenElement:V,name:t,job:n,imagen:r});o.setUserInfo(o.getUserInfo()),h("#overlay__profile-edit")}))})),document.querySelector("#imageForm").addEventListener("submit",(function(e){e.preventDefault(),N.postNewCard(A.value,x.value).then((function(e){H({cardData:e,eContainer:B,idUser:I}),h("#overlay__card-add")}))})),document.querySelector("#imageAvatar").addEventListener("submit",(function(e){e.preventDefault(),N.updateUserMeAvatar(F.value).then((function(e){var t=e.name,n=e.about,r=e.avatar,o=new j({nameElement:R,jobElement:T,imagenElement:V,name:t,job:n,imagen:r});o.setUserInfo(o.getUserInfo()),h("#overlayAvatarUpdate")}))}));var M=new U(document.querySelector("#overlayCardDelete"));function H(e){var t=new f(e.cardData,e.cardData.owner._id==e.idUser,(function(e){M.handleOverlay(),M.setHandleImageFormDelete((function(){N.deleteCard(e).then((function(){t._deleteCard(),M.handleOverlay()}))}))}),(function(e){N.putLikeButtonCard(e).then((function(e){t.likes=e.likes,t.handleAddLike(),t.setCardLikes()}))}),(function(e){N.deleteLikeButtonCard(e).then((function(e){t.likes=e.likes,t.handleRemoveLike(),t.setCardLikes()}))}));e.eContainer.append(t.generateCard())}M.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,